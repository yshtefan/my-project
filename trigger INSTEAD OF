CREATE OR REPLACE TRIGGER trg_insured_diseases_full_logic
INSTEAD OF INSERT OR UPDATE OR DELETE ON insured_with_diseases_view
FOR EACH ROW
DECLARE
    v_count           NUMBER;
    v_disease_count   NUMBER;
BEGIN
    ----------------------------------------------------
    -- INSERT: Добавить страхователя и диагноз
    ----------------------------------------------------
    IF INSERTING THEN
        -- Проверяем наличие страхователя
        SELECT COUNT(*) INTO v_count
        FROM policy_holders
        WHERE holder_id = :NEW.holder_id;

        -- Если страхователя нет — добавляем
        IF v_count = 0 THEN
            INSERT INTO policy_holders (holder_id, full_name, birth_date)
            VALUES (:NEW.holder_id, :NEW.full_name, :NEW.birth_date);
        END IF;

        -- Если record_id не указан — генерируем новый
        INSERT INTO insured_diseases (
            record_id,
            holder_id,
            disease_name,
            diagnosis_date,
            severity_level
        )
        VALUES (
            NVL(:NEW.record_id, seq_record_id.NEXTVAL),
            :NEW.holder_id,
            :NEW.disease_name,
            :NEW.diagnosis_date,
            :NEW.severity_level
        );

    ----------------------------------------------------
    -- UPDATE: Используем MERGE
    ----------------------------------------------------
    ELSIF UPDATING THEN
        MERGE INTO insured_diseases d
        USING (SELECT :NEW.record_id AS record_id FROM dual) src
        ON (d.record_id = src.record_id)
        WHEN MATCHED THEN
            UPDATE SET
                d.disease_name    = :NEW.disease_name,
                d.diagnosis_date  = :NEW.diagnosis_date,
                d.severity_level  = :NEW.severity_level
            WHERE
                NVL(:NEW.disease_name, 'x')     != NVL(:OLD.disease_name, 'x') OR
                NVL(:NEW.diagnosis_date, TO_DATE('1900-01-01','YYYY-MM-DD')) != NVL(:OLD.diagnosis_date, TO_DATE('1900-01-01','YYYY-MM-DD')) OR
                NVL(:NEW.severity_level, 'x')   != NVL(:OLD.severity_level, 'x');

    ----------------------------------------------------
    -- DELETE: Запрет удаления критических диагнозов
    ----------------------------------------------------
    ELSIF DELETING THEN
        IF LOWER(:OLD.severity_level) = 'критическое' THEN
            RAISE_APPLICATION_ERROR(-20001, 'Нельзя удалить диагноз с критической степенью тяжести.');
        END IF;

        DELETE FROM insured_diseases
        WHERE record_id = :OLD.record_id;
    END IF;
END;
